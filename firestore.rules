rules_version = '2';
service cloud.firestore {

	match /databases/{database}/documents {
  
     	// function hasCustomClaim(claim) {
      // 	return request.auth.token[claim] || false;
    	// }
      
      function isSignedIn() {
        return request.auth != null;
      }

        // TEAM MEMBER
      function isTeamMember(request,teamId) {
        let uid = request.auth.uid;
        let isDirectMember = exists(/databases/$(database)/documents/teams/$(teamId)/members/$(uid));
        let hasKidsToken = request.auth.token.keys().hasAnyPrefix('kids-');
        let isKidMember = hasKidsToken && exists(/databases/$(database)/documents/teams/$(teamId)/members/$(uid));
        return isDirectMember || isKidMember;
      }
      
      // TEAM ADMIN
      function isTeamAdmin(request, teamId) {
        return exists(/databases/$(database)/documents/teams/$(teamId)/admins/$(request.auth.uid));
      }

      // CLUB MEMBER
      function isClubMember(request, clubId) {
        let uid = request.auth.uid;
        let isDirectMember = exists(/databases/$(database)/documents/club/$(clubId)/members/$(uid));
        let hasKidsToken = request.auth.token.keys().hasAny(['kids-' + uid]);
        let isKidMember = hasKidsToken && exists(/databases/$(database)/documents/club/$(clubId)/members/$(uid));
        return isDirectMember || isKidMember;
      }

      // CLUB MEMBER via TEAMS - that's why we use path from reference
      function isClubMemberPath(request, path) {
        return exists(/databases/$(database)/documents/$(path)/members/$(request.auth.uid));
      }

      // CLUB ADMIN
      function isClubAdmin(request, clubId) {
        return exists(/databases/$(database)/documents/club/$(clubId)/admins/$(request.auth.uid));
      }

      // CLUB ADMIN via TEAMS - that's why we use path from reference
      function isClubAdminPath(request, path) {
        return exists(/databases/$(database)/documents/$(path)/admins/$(request.auth.uid));
      }
  
  		match /exercises/{id} {
      	allow read;
      }
// ************************************
			// USERPROFILE 2.0
// ************************************      
      match /userProfile/{userId} {
      //Eigene Daten
        allow read: if isSignedIn() && ( request.auth.uid == userId || request.auth.token["kids-" + userId] == true);
				allow read, write: if isSignedIn() && request.auth.uid == userId;
        allow read: if isSignedIn(); //REVIEW ACCESS OTHER USERS DATA within CLUB/TEAM
        
        // KIDS
        match /kidsRequests/{kidId=**} {
          allow read, update, delete, create: if isSignedIn() && request.auth.uid == userId;
        }   
				match /children/{kidId=**} {
          allow read, update, delete, create: if isSignedIn() && request.auth.uid == userId;
        }   

        // push
        match /push/{deviceId=**} {
          allow read, update, delete, create: if isSignedIn() && request.auth.uid == userId;
        }   
                // Notifications
        match /notification/{notificationId=**} {
          allow read, write, delete, create: if isSignedIn() && request.auth.uid == userId;
        }   
        
        //STRIPE within Customer = CLUB AND NOT! UserProfile
        match /checkout_sessions/{id} {
          allow read, write: if isSignedIn();
    
          match /subscriptions/{id} {
            allow read: if isSignedIn();
          }
          match /payments/{id} {
            allow read: if isSignedIn();
          }
        }     

        // Read and Create own Requests 
        match /clubRequests/{requestId=**} {
        	allow read, create: if isSignedIn() && request.auth.uid == userId;
        }
        match /teamRequests/{requestId=**} {
        	allow read, create: if isSignedIn() && request.auth.uid == userId;
        }
      	// club 
        match /clubs/{clubId=**} {
        	allow read: if isSignedIn() && request.auth.uid == userId;
        }
        // teams admin
        match /clubAdmin/{clubId=**} {
        	allow read: if isSignedIn() && request.auth.uid == userId;
        }
        // teams
        match /teams/{teamId=**} {
        	allow read: if isSignedIn() && ( request.auth.uid == userId || request.auth.token["kids-" + userId] == true);
          allow delete: if isSignedIn() && request.auth.uid == userId;
        }
        // teams admin
        match /teamAdmin/{teamId=**} {
        	allow read: if isSignedIn() && request.auth.uid == userId;
        }
        // helferPunkte admin
        match /helferPunkte/{id=**} {
        	allow read: if isSignedIn() && request.auth.uid == userId;
        }
        
        // CREATE ASSETS FOR TEAM/CLUB in own PROFILE --> Check for Permissions.
        // 
        // Training
        match /trainings/{trainingId=**} {
        	allow create: if isSignedIn() && request.auth.uid == userId && isTeamAdmin(request, request.resource.data.teamId);
        }
        // Event Team
        match /teamEvents/{eventId=**} {
        	allow create: if isSignedIn() && request.auth.uid == userId && isTeamAdmin(request, request.resource.data.teamId);
        }
        // News Team
        match /teamNews/{newsId=**} {
        	allow create: if isSignedIn() && request.auth.uid == userId && isTeamAdmin(request, request.resource.data.teamId);
        }
      	// Event Club
        match /clubEvents/{eventId=**} {
        	allow create: if isSignedIn() && request.auth.uid == userId && isClubAdmin(request, request.resource.data. clubId);
        }
        // Helfer Event
        match /helferEvents/{eventId=**} {
        	allow create: if isSignedIn() && request.auth.uid == userId && isClubAdmin(request, request.resource.data.clubId);
        }
      	// News Club
        match /clubNews/{newsId=**} {
        	allow create: if isSignedIn() && request.auth.uid == userId && isClubAdmin(request, request.resource.data.clubId);
        }
      }
      
      // REVIEW!!!!
      //team as teamAdmin
     	match /userProfile/{userId}/teams/{teamId} {
          allow delete: if isSignedIn() && isTeamAdmin(request,teamId); //is Team ADMIN
      }
      //teamAdmin as teamAdmin --> create new 
      match /userProfile/{userId}/teamAdmin/{teamId} {
        allow delete, create: if isSignedIn() && isTeamAdmin(request,teamId); //is Team ADMIN
      }
      //club as clubAdmin
      match /userProfile/{userId}/clubs/{clubId} {
        allow delete: if isSignedIn() && isClubAdmin(request,clubId); //is Club ADMIN
      }   
      //clubAdmin as clubAdmin
      match /userProfile/{userId}/clubAdmin/{clubId} {
        allow read, delete, create: if isSignedIn() && isClubAdmin(request,clubId); //is Club ADMIN
      }   

// ************************************************      
      //NEWS (Global News)
// ************************************************            
      match /news/{newsId} {
        allow read: if isSignedIn();
      }
      
// ************************************************        
      //CLUB
// ************************************************        
      match /club/{clubId} {
				// Needed to Join Clubs
				allow read: if isSignedIn(); // && exists(/databases/$(database)/documents/userProfile/$(request.auth.uid)/clubs/$(clubId));
				allow write: if isSignedIn() && isClubAdmin(request, clubId);

        //GAMES
        match /games/{gamesId=**} {
          allow read: if isSignedIn() && isClubMember(request, clubId);
        } 
	      //NEWS
      	match /news/{newsId=**} {
      		allow read: if isSignedIn() && isClubMember(request, clubId);
      	}
        //EVENTS
        match /events/{eventId} {
          allow read: if isSignedIn() && isClubMember(request, clubId);
          allow update, delete: if isSignedIn() && isClubAdmin(request, clubId);

          match /attendees/{memberId=**} {
            allow read: if isSignedIn() && isClubMember(request, clubId);
        	}     
          match /attendees/{memberId} { // Eigener Status ändern
            allow read, write: if isSignedIn()
            && memberId == request.auth.uid
            && isClubMember(request, clubId);
        	}    
          match /attendees/{memberId} { // Club Admin dürfen Status ändern
            allow read, write: if isSignedIn()
            && isClubAdmin(request, clubId)
            && isClubMember(request, clubId);
        	}  
        } 
        //HELFERPUNKT
        match /helferPunkte/{helferPunkt=**} {
          allow read: if isSignedIn() && isClubMember(request, clubId);
          allow create, update, delete: if isSignedIn() && isClubAdmin(request, clubId);
        }     
        // HELFEREVENTS
        match /helferEvents/{eventId} {
          allow read: if isSignedIn() && isClubMember(request, clubId);
          allow update, delete: if isSignedIn() && isClubAdmin(request, clubId)
          
          match /attendees/{memberId=**} {
            allow read: if isSignedIn() && isClubMember(request, clubId);
        	}     
          match /attendees/{memberId} { // Eigener Status ändern
            allow read, write: if isSignedIn()
            && memberId == request.auth.uid
            && isClubMember(request, clubId);
        	}    
          match /attendees/{memberId} { // Club Admin dürfen Status ändern
            allow read, write: if isSignedIn()
            && isClubAdmin(request, clubId)
            && isClubMember(request, clubId);
        	}            
          
        	match /schichten/{schichtId} {
            allow read: if isSignedIn() && isClubMember(request, clubId);
            allow write: if isSignedIn() && isClubAdmin(request, clubId);
     
            match /attendees/{memberId=**} {
              allow read: if isSignedIn() && isClubMember(request, clubId);
            }  
            match /attendees/{memberId} { // Eigener Status ändern
              allow read, write: if isSignedIn()
              && memberId == request.auth.uid
              && isClubMember(request, clubId);
            }    
            match /attendees/{memberId} { // Club Admin dürfen Status ändern
              allow read, write: if isSignedIn()
              && isClubAdmin(request, clubId)
              && isClubMember(request, clubId);
            } 
            // Approve event
            match /attendees/{memberId} {
              allow write: if isSignedIn()
              && isClubAdmin(request, clubId)
            }
          }  
        } 
        //TEAMS
      	match /teams/{teamId=**} {
      		allow read: if isSignedIn() && isClubMember(request, clubId);
          allow create: if isSignedIn() && isClubAdmin(request, clubId);
      	}    
        //MEMBERS
      	match /members/{memberId=**} {
      		allow read: if isSignedIn() && isClubMember(request, clubId);
      		allow write: if isSignedIn() && isClubAdmin(request, clubId);
				} 
        //ADMINS for ADMINS
      	match /admins/{memberId=**} {
      		allow read: if isSignedIn() && isClubMember(request, clubId);
 					allow write: if isSignedIn() && isClubAdmin(request, clubId);
      	}   
        //REQUESTS for ADMINS
      	match /requests/{requestId=**} {
          allow read: if isSignedIn() && isClubMember(request, clubId)
          allow write: if isSignedIn() && isClubAdmin(request, clubId);
      	} 
         //STRIPE within Customer = CLUB AND NOT! UserProfile
        match /checkout_sessions/{id} {
          allow read, write: if isSignedIn() && isClubAdmin(request, clubId);
     		}
        match /subscriptions/{id} {
          allow read: if isSignedIn() && isClubAdmin(request, clubId);
          match /invoices/{id} {
          	allow read: if isSignedIn() && isClubAdmin(request, clubId);
        	}
        }
        match /payments/{id} {
          allow read: if isSignedIn() && isClubAdmin(request, clubId);
        }          
      }
// ************************************************      
      //STRIPE
// ************************************************
    match /stripeProducts/{id} {
      allow read: if true;
        match /prices/{id} {
          allow read: if true;
        }
        match /tax_rates/{id} {
          allow read: if true;
        }
      }
// ************************************************      
      //TEAM
// ************************************************      
      match /teams/{teamId} {
        allow read: if isSignedIn()
        && (isTeamMember(request, teamId) || isClubMember(request, resource.data.clubId));
				allow write: if isSignedIn() && isTeamAdmin(request, teamId);
        allow delete: if isSignedIn() && (isTeamAdmin(request, teamId) || isClubAdmin(request, get(/databases/$(database)/documents/teams/$(teamId)).data.clubId) );
    
				//TEAM EXERCISES
        match /exercises/{exerciseId} {
          allow read, write: if isSignedIn() && ( isTeamAdmin(request, teamId) || isClubAdmin(request, get(/databases/$(database)/documents/teams/$(teamId)).data.clubId) );
        } 				        
              
        //TRAINING
        match /trainings/{trainingId} {
          allow read: if isSignedIn() && ( isTeamMember(request, teamId) || isTeamAdmin(request, teamId) || isClubAdmin(request, get(/databases/$(database)/documents/teams/$(teamId)).data.clubId) );
          allow delete: if isSignedIn() && isTeamAdmin(request, teamId);
         
					//ATTENDEEES
          match /attendees/{memberId=**} {
            allow read: if isSignedIn() && ( isTeamMember(request, teamId) || isTeamAdmin(request, teamId) || isClubAdmin(request, get(/databases/$(database)/documents/teams/$(teamId)).data.clubId) );
        	}     
          match /attendees/{memberId} { // Eigener Status ändern
            allow read, write: if isSignedIn()
            && memberId == request.auth.uid
            && isTeamMember(request, teamId);
          }    
           match /attendees/{memberId} { // Team Admin dürfen Status ändern
            allow read, write: if isSignedIn()
            && isTeamAdmin(request, teamId)
            && isTeamMember(request, teamId);
          } 
        	//Training EXERCISES
          match /exercises/{exerciseId=**} {
            allow read: if isSignedIn()  && isTeamMember(request, teamId);
            allow write: if isSignedIn()  && isTeamAdmin(request, teamId);
          } 
          match /exercises/{exerciseId} {
            allow read: if isSignedIn() && isTeamMember(request, teamId);
          } 
        }     
        //TEAM GAMES
        match /games/{gamesId} {
          allow read: if isSignedIn() && ( isTeamMember(request, teamId) || isTeamAdmin(request, teamId) || isClubAdmin(request, get(/databases/$(database)/documents/teams/$(teamId)).data.clubId) );
          allow delete: if isSignedIn() && isTeamAdmin(request, teamId);
          
          //ATTENDEEES
          match /attendees/{memberId=**} {
            allow read: if isSignedIn() && ( isTeamMember(request, teamId) || isTeamAdmin(request, teamId) || isClubAdmin(request, get(/databases/$(database)/documents/teams/$(teamId)).data.clubId) );
        	}      
          match /attendees/{memberId} { // Eigener Status ändern
            allow read, write: if isSignedIn()
            && memberId == request.auth.uid
            && isTeamMember(request, teamId);
          }    
          match /attendees/{memberId} { // Team Admin dürfen Status ändern
            allow read, write: if isSignedIn()
            && isTeamAdmin(request, teamId)
            && isTeamMember(request, teamId);
          } 
        } 

        //Team EVENTS (not yet in use)
        match /events/{eventId} {
          allow read: if isSignedIn() && isTeamMember(request, teamId);
          
          //ATTENDEEES
					match /attendees/{memberId=**} {
            allow read: if isSignedIn() && isTeamMember(request, teamId);
        	}     
          match /attendees/{memberId} { // Eigener Status ändern
            allow read, write: if isSignedIn()
            && memberId == request.auth.uid
            && isTeamMember(request, teamId);
          }    
          match /attendees/{memberId} { // Club Admin dürfen Status ändern
            allow read, write: if isSignedIn()
            && isTeamAdmin(request, teamId)
            && isTeamMember(request, teamId);
          }    
        } 
	      //Team NEWS
      	match /news/{newsId=**} {
      		allow read: if isSignedIn() && isTeamMember(request, teamId);
      	} 
        // RANKING TODO! THIS IS SOMEHOW NOT WORKING
        match /ranking/{document} {
          allow read: if isSignedIn() && isClubMember(request, get(/databases/$(database)/documents/teams/$(teamId)).data.clubId);
          
          match /table/{document=**} {
          	  allow read: if isSignedIn() && isClubMember(request, get(/databases/$(database)/documents/teams/$(teamId)).data.clubId);
          }
        }
      	//MEMBERS
      	match /members/{memberId=**} {
          // Access the parent team document to get the clubRef
          allow read: if isSignedIn() && (isTeamMember(request, teamId) || isClubMember(request, get(/databases/$(database)/documents/teams/$(teamId)).data.clubId));

          // Allow create, delete if the user is a team admin or a club admin
          allow write, delete: if isSignedIn() && (isTeamAdmin(request, teamId) || isClubAdmin(request, get(/databases/$(database)/documents/teams/$(teamId)).data.clubId));
        }
        
       	//ADMINS for ADMINS
      	match /admins/{adminId=**} {
          // Access the parent team document to get the clubRef
          allow read: if isSignedIn() && (isTeamMember(request, teamId) || isClubMember(request, get(/databases/$(database)/documents/teams/$(teamId)).data.clubId));
        
          // Allow create, delete if the user is a team admin or a club admin
          allow write, delete: if isSignedIn() && (isTeamAdmin(request, teamId) || isClubAdmin(request, get(/databases/$(database)/documents/teams/$(teamId)).data.clubId));
      	} 
        //REQUESTS for ADMINS
      	match /requests/{requestId=**} {
        	// Access the parent team document to get the clubRef
          allow read: if isSignedIn() && (isTeamMember(request, teamId) || isClubMember(request, get(/databases/$(database)/documents/teams/$(teamId)).data.clubId));
        
          // Allow create, delete if the user is a team admin or a club admin
          allow write, delete: if isSignedIn() && (isTeamAdmin(request, teamId) || isClubAdmin(request, get(/databases/$(database)/documents/teams/$(teamId)).data.clubId));
      	} 
      }
    
      //No ACCESS
      match /template/{documents=**} {
      	allow read, write: if 1==2;
      }
      
      //No ACCESS
      match /mail { 
        allow read, write: if 1==2;
      }
  }

}